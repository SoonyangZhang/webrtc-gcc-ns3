import os
webrtc_code_path = os.environ['WEBRTC_SRC_DIR']
webrtc_lib_path = os.path.join(webrtc_code_path, 'out', 'm84', 'obj')
webrtc_absl_path = os.path.join(webrtc_code_path, 'third_party', 'abseil-cpp')
def configure(conf):
    conf.env['ENABLE_webrtc'] = conf.check(
    mandatory=True,
    libpath = [webrtc_lib_path],
    includes = [
        webrtc_code_path,
        webrtc_absl_path],
    lib=['webrtc',],
    uselib_store = 'libwebrtc')
    conf.env.append_value("CXXFLAGS", [
    "-std=c++14",
    "-I" + webrtc_code_path,
    "-I" + webrtc_absl_path,
    "-Wno-unused-const-variable",
    "-Wno-unused-private-field",
    ])
def build(bld):
    module= bld.create_ns3_module('ex-webrtc')
    module.env.append_value("CXXFLAGS", [
      "-D__STDC_CONSTANT_MACROS",
      "-DWEBRTC_POSIX",
      "-DWEBRTC_LINUX"])
    module.env.append_value("LIB", ["webrtc"])
    module.source = [
    'model/simulated-process-thread.cc',
    'model/simulated-task-queue.cc',
    'model/simulated-thread.cc',
    'model/webrtc-clock.cc',
    'model/webrtc-config.cc',
    'model/webrtc-emu-controller.cc',
    'model/webrtclog.cc',
    'model/webrtc-receiver.cc',
    'model/webrtc-sender.cc',
    'model/webrtc-simu-controller.cc',
    'model/webrtc-tag.cc',
    'model/webrtc-trace.cc',    
    'api/test/create_frame_generator.cc',
    'api/test/network_emulation/network_emulation_interfaces.cc',
    'test/encoder_settings.cc',
    'test/fake_decoder.cc',
    'test/fake_encoder.cc',
    'test/fake_vp8_decoder.cc',
    'test/fake_vp8_encoder.cc',
    'test/field_trial.cc',
    'test/frame_forwarder.cc',
    'test/frame_generator.cc',
    'test/frame_generator_capturer.cc',
    'test/frame_utils.cc',
    'test/goog_cc_printer.cc',
    'test/rtp_header_parser.cc',
    'test/task_queue_for_test.cc',
    'test/test_video_capturer.cc',
    'test/logging/file_log_writer.cc',
    'test/logging/log_writer.cc',
    'test/scenario/call_client.cc',
    'test/scenario/column_printer.cc',
    'test/scenario/hardware_codecs.cc',
    'test/scenario/network_node.cc',
    'test/scenario/performance_stats.cc',
    'test/scenario/scenario_config.cc',
    'test/scenario/stats_collection.cc',
    'test/scenario/video_frame_matcher.cc',
    'test/scenario/video_stream2.cc',
    'test/testsupport/file_utils.cc',
    'test/testsupport/file_utils_override.cc',
    'test/testsupport/ivf_video_frame_generator.cc',
    ]
    headers = bld(features='ns3header')
    headers.module = 'ex-webrtc'
    headers.source = [
    'model/webrtc-clock.h',
    'model/atomic-lock.h',    
    'model/webrtc-config.h',
    'model/webrtc-emu-controller.h',
    'model/webrtc-defines.h',
    'model/webrtclog.h',
    'model/webrtc-receiver.h',
    'model/webrtc-sender.h',     
    'model/webrtc-tag.h',
    'model/webrtc-trace.h',     
    ]
    module.env['INCLUDES'] += [
    '.',
    'model',
    ]
    module.use.append("libwebrtc")
